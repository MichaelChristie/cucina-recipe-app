rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is authenticated and has admin claim
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }

    // Helper function to check if user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    match /recipes/{recipeId} {
      allow read: if true;  // Allows public read access
      allow create: if isAuthenticated();  // Any authenticated user can create
      allow update, delete: if isAdmin() || isOwner(resource.data.authorId);  // Only admins or owners can update/delete
    }

    match /tags/{tagId} {
      allow read: if true;  // Allows public read access
      allow write: if isAdmin();  // Only admins can write
    }

    match /ingredients/{ingredientId} {
      allow read: if true;  // Allows public read access
      allow write: if isAdmin();  // Only admins can write
    }

    // User profiles collection (if you add it later)
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
  }
}